"use strict";
"use strict";
var _ = require("lodash");
var Ext = require("./ext");
var Bluebird = require("bluebird");
module.exports = function(platform) {
  var did = _.isString(platform) ? platform.trim().toLowerCase() : null;
  did = did || "cpu";
  function createAF() {
    switch (did) {
      case "cpu":
        return require("bindings")("fire_js_CPU");
      case "cuda":
        return require("bindings")("fire_js_CUDA");
      case "opencl":
        return require("bindings")("fire_js_OpenCL");
      default:
        throw new Error("Device '" + platform + "' is not supported.");
    }
  }
  var af = createAF();
  _.extend(af, new Ext(af));
  return Bluebird.promisifyAll(af);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsV0FBVyxDQUFDO0FBRVosQUFBSSxFQUFBLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDekIsQUFBSSxFQUFBLENBQUEsR0FBRSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsT0FBTSxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDLENBQUM7QUFFbEMsS0FBSyxRQUFRLEVBQUksVUFBUyxRQUFPLENBQUc7QUFDaEMsQUFBSSxJQUFBLENBQUEsR0FBRSxFQUFJLENBQUEsQ0FBQSxTQUFTLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQSxDQUFJLENBQUEsUUFBTyxLQUFLLEFBQUMsRUFBQyxZQUFZLEFBQUMsRUFBQyxDQUFBLENBQUksS0FBRyxDQUFDO0FBQ3JFLElBQUUsRUFBSSxDQUFBLEdBQUUsR0FBSyxNQUFJLENBQUM7QUFDbEIsU0FBUyxTQUFPLENBQUUsQUFBRCxDQUFHO0FBQ2hCLFdBQVEsR0FBRTtBQUNOLFNBQUssTUFBSTtBQUNMLGFBQU8sQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUMsQUFBQyxDQUFDLGFBQVksQ0FBQyxDQUFDO0FBQUEsQUFDN0MsU0FBSyxPQUFLO0FBQ04sYUFBTyxDQUFBLE9BQU0sQUFBQyxDQUFDLFVBQVMsQ0FBQyxBQUFDLENBQUMsY0FBYSxDQUFDLENBQUM7QUFBQSxBQUM5QyxTQUFLLFNBQU87QUFDUixhQUFPLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDLEFBQUMsQ0FBQyxnQkFBZSxDQUFDLENBQUM7QUFBQSxBQUNoRDtBQUNJLFlBQU0sSUFBSSxNQUFJLEFBQUMsQ0FBQyxVQUFTLEVBQUksU0FBTyxDQUFBLENBQUksc0JBQW9CLENBQUMsQ0FBQztBQUQzRCxJQUVYO0VBQ0o7QUFBQSxBQUNJLElBQUEsQ0FBQSxFQUFDLEVBQUksQ0FBQSxRQUFPLEFBQUMsRUFBQyxDQUFDO0FBQ25CLEVBQUEsT0FBTyxBQUFDLENBQUMsRUFBQyxDQUFHLElBQUksSUFBRSxBQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztBQUN6QixPQUFPLENBQUEsUUFBTyxhQUFhLEFBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztBQUNwQyxDQUFDO0FBQ0QiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5sZXQgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5sZXQgRXh0ID0gcmVxdWlyZShcIi4vZXh0XCIpO1xubGV0IEJsdWViaXJkID0gcmVxdWlyZShcImJsdWViaXJkXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHBsYXRmb3JtKSB7XG4gICAgbGV0IGRpZCA9IF8uaXNTdHJpbmcocGxhdGZvcm0pID8gcGxhdGZvcm0udHJpbSgpLnRvTG93ZXJDYXNlKCkgOiBudWxsO1xuICAgIGRpZCA9IGRpZCB8fCBcImNwdVwiO1xuICAgIGZ1bmN0aW9uIGNyZWF0ZUFGKCkge1xuICAgICAgICBzd2l0Y2ggKGRpZCkge1xuICAgICAgICAgICAgY2FzZSBcImNwdVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZXF1aXJlKFwiYmluZGluZ3NcIikoXCJmaXJlX2pzX0NQVVwiKTtcbiAgICAgICAgICAgIGNhc2UgXCJjdWRhXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCJiaW5kaW5nc1wiKShcImZpcmVfanNfQ1VEQVwiKTtcbiAgICAgICAgICAgIGNhc2UgXCJvcGVuY2xcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWlyZShcImJpbmRpbmdzXCIpKFwiZmlyZV9qc19PcGVuQ0xcIik7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRldmljZSAnXCIgKyBwbGF0Zm9ybSArIFwiJyBpcyBub3Qgc3VwcG9ydGVkLlwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBsZXQgYWYgPSBjcmVhdGVBRigpO1xuICAgIF8uZXh0ZW5kKGFmLCBuZXcgRXh0KGFmKSk7XG4gICAgcmV0dXJuIEJsdWViaXJkLnByb21pc2lmeUFsbChhZik7XG59O1xuIl19
