"use strict";
"use strict";
var _ = require("lodash");
var Ext = require("./ext");
var Bluebird = require("bluebird");
module.exports = function(platform) {
  var did = _.isString(platform) ? platform.trim().toLowerCase() : null;
  did = did || "cpu";
  function createAF() {
    switch (did) {
      case "cpu":
        return require("bindings")("arrayfire_js_CPU");
      case "cuda":
        return require("bindings")("arrayfire_js_CUDA");
      case "opencl":
        return require("bindings")("arrayfire_js_OpenCL");
      default:
        throw new Error("Device '" + platform + "' is not supported.");
    }
  }
  var af = createAF();
  _.extend(af, new Ext(af));
  return Bluebird.promisifyAll(af);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsV0FBVyxDQUFDO0FBRVosQUFBSSxFQUFBLENBQUEsQ0FBQSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDekIsQUFBSSxFQUFBLENBQUEsR0FBRSxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsT0FBTSxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDLENBQUM7QUFFbEMsS0FBSyxRQUFRLEVBQUksVUFBUyxRQUFPLENBQUc7QUFDaEMsQUFBSSxJQUFBLENBQUEsR0FBRSxFQUFJLENBQUEsQ0FBQSxTQUFTLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQSxDQUFJLENBQUEsUUFBTyxLQUFLLEFBQUMsRUFBQyxZQUFZLEFBQUMsRUFBQyxDQUFBLENBQUksS0FBRyxDQUFDO0FBQ3JFLElBQUUsRUFBSSxDQUFBLEdBQUUsR0FBSyxNQUFJLENBQUM7QUFDbEIsU0FBUyxTQUFPLENBQUUsQUFBRCxDQUFHO0FBQ2hCLFdBQVEsR0FBRTtBQUNOLFNBQUssTUFBSTtBQUNMLGFBQU8sQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUMsQUFBQyxDQUFDLGtCQUFpQixDQUFDLENBQUM7QUFBQSxBQUNsRCxTQUFLLE9BQUs7QUFDTixhQUFPLENBQUEsT0FBTSxBQUFDLENBQUMsVUFBUyxDQUFDLEFBQUMsQ0FBQyxtQkFBa0IsQ0FBQyxDQUFDO0FBQUEsQUFDbkQsU0FBSyxTQUFPO0FBQ1IsYUFBTyxDQUFBLE9BQU0sQUFBQyxDQUFDLFVBQVMsQ0FBQyxBQUFDLENBQUMscUJBQW9CLENBQUMsQ0FBQztBQUFBLEFBQ3JEO0FBQ0ksWUFBTSxJQUFJLE1BQUksQUFBQyxDQUFDLFVBQVMsRUFBSSxTQUFPLENBQUEsQ0FBSSxzQkFBb0IsQ0FBQyxDQUFDO0FBRDNELElBRVg7RUFDSjtBQUFBLEFBQ0ksSUFBQSxDQUFBLEVBQUMsRUFBSSxDQUFBLFFBQU8sQUFBQyxFQUFDLENBQUM7QUFDbkIsRUFBQSxPQUFPLEFBQUMsQ0FBQyxFQUFDLENBQUcsSUFBSSxJQUFFLEFBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pCLE9BQU8sQ0FBQSxRQUFPLGFBQWEsQUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFDRCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcbmxldCBFeHQgPSByZXF1aXJlKFwiLi9leHRcIik7XG5sZXQgQmx1ZWJpcmQgPSByZXF1aXJlKFwiYmx1ZWJpcmRcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocGxhdGZvcm0pIHtcbiAgICBsZXQgZGlkID0gXy5pc1N0cmluZyhwbGF0Zm9ybSkgPyBwbGF0Zm9ybS50cmltKCkudG9Mb3dlckNhc2UoKSA6IG51bGw7XG4gICAgZGlkID0gZGlkIHx8IFwiY3B1XCI7XG4gICAgZnVuY3Rpb24gY3JlYXRlQUYoKSB7XG4gICAgICAgIHN3aXRjaCAoZGlkKSB7XG4gICAgICAgICAgICBjYXNlIFwiY3B1XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVpcmUoXCJiaW5kaW5nc1wiKShcImFycmF5ZmlyZV9qc19DUFVcIik7XG4gICAgICAgICAgICBjYXNlIFwiY3VkYVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZXF1aXJlKFwiYmluZGluZ3NcIikoXCJhcnJheWZpcmVfanNfQ1VEQVwiKTtcbiAgICAgICAgICAgIGNhc2UgXCJvcGVuY2xcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWlyZShcImJpbmRpbmdzXCIpKFwiYXJyYXlmaXJlX2pzX09wZW5DTFwiKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGV2aWNlICdcIiArIHBsYXRmb3JtICsgXCInIGlzIG5vdCBzdXBwb3J0ZWQuXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBhZiA9IGNyZWF0ZUFGKCk7XG4gICAgXy5leHRlbmQoYWYsIG5ldyBFeHQoYWYpKTtcbiAgICByZXR1cm4gQmx1ZWJpcmQucHJvbWlzaWZ5QWxsKGFmKTtcbn07XG4iXX0=
