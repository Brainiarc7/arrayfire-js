{"version":3,"sources":["scope.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE1B,IAAI,WAAW,GAAG,EAAE,CAAC;;AAErB,SAAS,KAAK,CAAC,CAAC,EAAE;AACd,QAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;AACjB,aAAK,CAAC,KAAK,EAAE,CAAC;AACd,YAAI;AACA,mBAAO,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SAC/B,SACO;AACJ,iBAAK,CAAC,GAAG,EAAE,CAAC;SACf;KACJ;CACJ;;AAED,KAAK,CAAC,KAAK,GAAG,YAAW;AACrB,eAAW,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;AAC5B,WAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,KAAK,CAAC,GAAG,GAAG,YAAW;AACnB,QAAI,WAAW,CAAC,MAAM,EAAE;AACpB,YAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,mBAAW,CAAC,MAAM,EAAE,CAAC;AACrB,YAAI,CAAC,GAAG,CAAC,CAAC;KACb;AACD,WAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,KAAK,CAAC,QAAQ,GAAG,UAAS,KAAK,EAAE;AAC7B,QAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACrE,YAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,WAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAClB;CACJ,CAAC;;AAEF,KAAK,CAAC,MAAM,GAAG,UAAS,KAAK,EAAE;AAC3B,QAAI,WAAW,CAAC,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzC,YAAI,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,WAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACrB;AACD,WAAO,KAAK,CAAC;CAChB,CAAC;;AAEF,SAAS,IAAI,CAAC,MAAM,EAAE;;;;;;AAClB,6BAAkB,MAAM,CAAC,MAAM,EAAE,8HAAE;gBAA1B,KAAK;;AACV,iBAAK,CAAC,IAAI,EAAE,CAAC;SAChB;;;;;;;;;;;;;;;CACJ;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC","file":"scope.js","sourcesContent":["\"use strict\";\r\nlet Bluebird = require(\"bluebird\");\r\nlet _ = require(\"lodash\");\r\n\r\nlet temporaries = [];\r\n\r\nfunction scope(f) {\r\n    if (_.isFunction(f)) {\r\n        scope.begin();\r\n        try {\r\n            return f.call(scope, scope);\r\n        }\r\n        finally {\r\n            scope.end();\r\n        }\r\n    }\r\n}\r\n\r\nscope.begin = function() {\r\n    temporaries.push(new Set());\r\n    return scope;\r\n};\r\n\r\nscope.end = function() {\r\n    if (temporaries.length) {\r\n        let set = temporaries[temporaries.length - 1];\r\n        temporaries.length--;\r\n        free(set);\r\n    }\r\n    return scope;\r\n};\r\n\r\nscope.register = function(array) {\r\n    if (temporaries.length && _.isObject(array) && _.isFunction(array.free)) {\r\n        let set = temporaries[temporaries.length - 1];\r\n        set.add(array);\r\n    }\r\n};\r\n\r\nscope.result = function(array) {\r\n    if (temporaries.length && _.isObject(array)) {\r\n        let set = temporaries[temporaries.length - 1];\r\n        set.delete(array);\r\n    }\r\n    return array;\r\n};\r\n\r\nfunction free(arrays) {\r\n    for (let array of arrays.values()) {\r\n        array.free();\r\n    }\r\n}\r\n\r\nmodule.exports = scope;"],"sourceRoot":"/source/"}