"use strict";
"use strict";
var matProp = module.exports = {
  none: 0,
  trans: 1,
  cTrans: 2,
  upper: 32,
  lower: 64,
  diagUnit: 128,
  sym: 512,
  posDef: 1024,
  orthog: 2048,
  triDiag: 4096,
  blockDiag: 8192,
  AF_MAT_NONE: 0,
  AF_MAT_TRANS: 1,
  AF_MAT_CTRANS: 2,
  AF_MAT_UPPER: 32,
  AF_MAT_LOWER: 64,
  AF_MAT_DIAG_UNIT: 128,
  AF_MAT_SYM: 512,
  AF_MAT_POSDEF: 1024,
  AF_MAT_ORTHOG: 2048,
  AF_MAT_TRI_DIAG: 4096,
  AF_MAT_BLOCK_DIAG: 8192
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdFByb3AuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JBO0FBQUEsV0FBVyxDQUFDO0FBRVosQUFBSSxFQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsTUFBSyxRQUFRLEVBQUk7QUFDM0IsS0FBRyxDQUFVLEVBQUE7QUFDYixNQUFJLENBQVMsRUFBQTtBQUNiLE9BQUssQ0FBUSxFQUFBO0FBQ2IsTUFBSSxDQUFTLEdBQUM7QUFDZCxNQUFJLENBQVMsR0FBQztBQUNkLFNBQU8sQ0FBTSxJQUFFO0FBQ2YsSUFBRSxDQUFXLElBQUU7QUFDZixPQUFLLENBQVEsS0FBRztBQUNoQixPQUFLLENBQVEsS0FBRztBQUNoQixRQUFNLENBQU8sS0FBRztBQUNoQixVQUFRLENBQUssS0FBRztBQUNoQixZQUFVLENBQVUsRUFBQTtBQUNwQixhQUFXLENBQVMsRUFBQTtBQUNwQixjQUFZLENBQVEsRUFBQTtBQUNwQixhQUFXLENBQVMsR0FBQztBQUNyQixhQUFXLENBQVMsR0FBQztBQUNyQixpQkFBZSxDQUFLLElBQUU7QUFDdEIsV0FBUyxDQUFXLElBQUU7QUFDdEIsY0FBWSxDQUFRLEtBQUc7QUFDdkIsY0FBWSxDQUFRLEtBQUc7QUFDdkIsZ0JBQWMsQ0FBTSxLQUFHO0FBQ3ZCLGtCQUFnQixDQUFJLEtBQUc7QUFBQSxBQUMzQixDQUFDO0FBQUEiLCJmaWxlIjoibWF0UHJvcC5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAoYykgMjAxNC0yMDE1LCBBcnJheUZpcmVcbkNvcHlyaWdodCAoYykgMjAxNSBHw6Fib3IgTWV6xZEgYWthIHVuYm9ybmNoaWtrZW4gKGdhYm9yLm1lem9Ab3V0bG9vay5jb20pXG5BbGwgcmlnaHRzIHJlc2VydmVkLlxuXG5SZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQgbW9kaWZpY2F0aW9uLFxuYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OlxuXG4gKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXNcbiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG5cbiAqIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpc1xuICBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3JcbiAgb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi5cblxuICogTmVpdGhlciB0aGUgbmFtZSBvZiB0aGUgQXJyYXlGaXJlIG5vciB0aGUgbmFtZXMgb2YgaXRzXG4gIGNvbnRyaWJ1dG9ycyBtYXkgYmUgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHMgZGVyaXZlZCBmcm9tXG4gIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXG5cblRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgXCJBUyBJU1wiIEFORFxuQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRURcbldBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkVcbkRJU0NMQUlNRUQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBDT1BZUklHSFQgSE9MREVSIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SXG5BTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVNcbihJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUztcbkxPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTlxuQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlRcbihJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTXG5TT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbiovXG5cblwidXNlIHN0cmljdFwiO1xuXG5sZXQgbWF0UHJvcCA9IG1vZHVsZS5leHBvcnRzID0ge1xuICAgIG5vbmUgICAgICAgOiAwLCAgICAvLy88IERlZmF1bHRcbiAgICB0cmFucyAgICAgIDogMSwgICAgLy8vPCBEYXRhIG5lZWRzIHRvIGJlIHRyYW5zcG9zZWRcbiAgICBjVHJhbnMgICAgIDogMiwgICAgLy8vPCBEYXRhIG5lZWRzIHRvIGJlIGNvbmp1Z2F0ZSB0YW5zcG9zZWRcbiAgICB1cHBlciAgICAgIDogMzIsICAgLy8vPCBNYXRyaXggaXMgdXBwZXIgdHJpYW5ndWxhclxuICAgIGxvd2VyICAgICAgOiA2NCwgICAvLy88IE1hdHJpeCBpcyBsb3dlciB0cmlhbmd1bGFyXG4gICAgZGlhZ1VuaXQgICA6IDEyOCwgIC8vLzwgTWF0cml4IGRpYWdvbmFsIGNvbnRhaW5zIHVuaXRhcnkgdmFsdWVzXG4gICAgc3ltICAgICAgICA6IDUxMiwgIC8vLzwgTWF0cml4IGlzIHN5bW1ldHJpY1xuICAgIHBvc0RlZiAgICAgOiAxMDI0LCAvLy88IE1hdHJpeCBpcyBwb3NpdGl2ZSBkZWZpbml0ZVxuICAgIG9ydGhvZyAgICAgOiAyMDQ4LCAvLy88IE1hdHJpeCBpcyBvcnRob2dvbmFsXG4gICAgdHJpRGlhZyAgICA6IDQwOTYsIC8vLzwgTWF0cml4IGlzIHRyaSBkaWFnb25hbFxuICAgIGJsb2NrRGlhZyAgOiA4MTkyLCAgLy8vPCBNYXRyaXggaXMgYmxvY2sgZGlhZ29uYWxcbiAgICBBRl9NQVRfTk9ORSAgICAgICA6IDAsICAgIC8vLzwgRGVmYXVsdFxuICAgIEFGX01BVF9UUkFOUyAgICAgIDogMSwgICAgLy8vPCBEYXRhIG5lZWRzIHRvIGJlIHRyYW5zcG9zZWRcbiAgICBBRl9NQVRfQ1RSQU5TICAgICA6IDIsICAgIC8vLzwgRGF0YSBuZWVkcyB0byBiZSBjb25qdWdhdGUgdGFuc3Bvc2VkXG4gICAgQUZfTUFUX1VQUEVSICAgICAgOiAzMiwgICAvLy88IE1hdHJpeCBpcyB1cHBlciB0cmlhbmd1bGFyXG4gICAgQUZfTUFUX0xPV0VSICAgICAgOiA2NCwgICAvLy88IE1hdHJpeCBpcyBsb3dlciB0cmlhbmd1bGFyXG4gICAgQUZfTUFUX0RJQUdfVU5JVCAgOiAxMjgsICAvLy88IE1hdHJpeCBkaWFnb25hbCBjb250YWlucyB1bml0YXJ5IHZhbHVlc1xuICAgIEFGX01BVF9TWU0gICAgICAgIDogNTEyLCAgLy8vPCBNYXRyaXggaXMgc3ltbWV0cmljXG4gICAgQUZfTUFUX1BPU0RFRiAgICAgOiAxMDI0LCAvLy88IE1hdHJpeCBpcyBwb3NpdGl2ZSBkZWZpbml0ZVxuICAgIEFGX01BVF9PUlRIT0cgICAgIDogMjA0OCwgLy8vPCBNYXRyaXggaXMgb3J0aG9nb25hbFxuICAgIEFGX01BVF9UUklfRElBRyAgIDogNDA5NiwgLy8vPCBNYXRyaXggaXMgdHJpIGRpYWdvbmFsXG4gICAgQUZfTUFUX0JMT0NLX0RJQUcgOiA4MTkyICAvLy88IE1hdHJpeCBpcyBibG9jayBkaWFnb25hbFxufTsiXX0=
