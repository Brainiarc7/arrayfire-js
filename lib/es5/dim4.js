"use strict";
"use strict";
var lodash = require("lodash");
var assert = require("better-assert");
function Dim4(dim0, dim1, dim2, dim3) {
  if (_.isArray(dim0)) {
    return new Dim4(dim0[0], dim0[1], dim0[2], dim0[3]);
  }
  this.dims = [];
  if (_.isNumber(dim0)) {
    this.dims.push(dim0);
  } else {
    this.dims.push(1);
  }
  if (_.isNumber(dim1)) {
    this.dims.push(dim1);
  } else {
    this.dims.push(1);
  }
  if (_.isNumber(dim2)) {
    this.dims.push(dim2);
  } else {
    this.dims.push(1);
  }
  if (_.isNumber(dim3)) {
    this.dims.push(dim3);
  } else {
    this.dims.push(1);
  }
  var index;
  for (index = 3; index >= 0; index--) {
    if (this.dims[index] !== 1) {
      break;
    }
  }
  this.ndims = this.nDims = index + 1;
  this.elements = this.dims[0] * this.dims[1] * this.dims[2] * this.dims[3];
}
module.exports = Dim4;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpbTQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JBO0FBQUEsV0FBVyxDQUFDO0FBRVosQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsUUFBTyxDQUFDLENBQUM7QUFDOUIsQUFBSSxFQUFBLENBQUEsTUFBSyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsZUFBYyxDQUFDLENBQUM7QUFFckMsT0FBUyxLQUFHLENBQUUsSUFBRyxDQUFHLENBQUEsSUFBRyxDQUFHLENBQUEsSUFBRyxDQUFHLENBQUEsSUFBRyxDQUFHO0FBQ2xDLEtBQUksQ0FBQSxRQUFRLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBRztBQUNqQixTQUFPLElBQUksS0FBRyxBQUFDLENBQUMsSUFBRyxDQUFFLENBQUEsQ0FBQyxDQUFHLENBQUEsSUFBRyxDQUFFLENBQUEsQ0FBQyxDQUFHLENBQUEsSUFBRyxDQUFFLENBQUEsQ0FBQyxDQUFHLENBQUEsSUFBRyxDQUFFLENBQUEsQ0FBQyxDQUFDLENBQUM7RUFDdkQ7QUFBQSxBQUNBLEtBQUcsS0FBSyxFQUFJLEdBQUMsQ0FBQztBQUNkLEtBQUksQ0FBQSxTQUFTLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBRztBQUFFLE9BQUcsS0FBSyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQTtFQUFFLEtBQU87QUFBRSxPQUFHLEtBQUssS0FBSyxBQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7RUFBRTtBQUFBLEFBQ3pFLEtBQUksQ0FBQSxTQUFTLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBRztBQUFFLE9BQUcsS0FBSyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQTtFQUFFLEtBQU87QUFBRSxPQUFHLEtBQUssS0FBSyxBQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7RUFBRTtBQUFBLEFBQ3pFLEtBQUksQ0FBQSxTQUFTLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBRztBQUFFLE9BQUcsS0FBSyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQTtFQUFFLEtBQU87QUFBRSxPQUFHLEtBQUssS0FBSyxBQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7RUFBRTtBQUFBLEFBQ3pFLEtBQUksQ0FBQSxTQUFTLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBRztBQUFFLE9BQUcsS0FBSyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQTtFQUFFLEtBQU87QUFBRSxPQUFHLEtBQUssS0FBSyxBQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7RUFBRTtBQUFBLEFBQ3JFLElBQUEsQ0FBQSxLQUFJLENBQUM7QUFDVCxNQUFLLEtBQUksRUFBSSxFQUFBLENBQUcsQ0FBQSxLQUFJLEdBQUssRUFBQSxDQUFHLENBQUEsS0FBSSxFQUFFLENBQUc7QUFDakMsT0FBSSxJQUFHLEtBQUssQ0FBRSxLQUFJLENBQUMsSUFBTSxFQUFBLENBQUc7QUFDeEIsV0FBSztJQUNUO0FBQUEsRUFDSjtBQUFBLEFBQ0EsS0FBRyxNQUFNLEVBQUksQ0FBQSxJQUFHLE1BQU0sRUFBSSxDQUFBLEtBQUksRUFBSSxFQUFBLENBQUM7QUFDbkMsS0FBRyxTQUFTLEVBQUksQ0FBQSxJQUFHLEtBQUssQ0FBRSxDQUFBLENBQUMsRUFBSSxDQUFBLElBQUcsS0FBSyxDQUFFLENBQUEsQ0FBQyxDQUFBLENBQUksQ0FBQSxJQUFHLEtBQUssQ0FBRSxDQUFBLENBQUMsQ0FBQSxDQUFJLENBQUEsSUFBRyxLQUFLLENBQUUsQ0FBQSxDQUFDLENBQUM7QUFDN0U7QUFBQSxBQUVBLEtBQUssUUFBUSxFQUFJLEtBQUcsQ0FBQztBQUFBIiwiZmlsZSI6ImRpbTQuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbkNvcHlyaWdodCAoYykgMjAxNC0yMDE1LCBBcnJheUZpcmVcclxuQ29weXJpZ2h0IChjKSAyMDE1IEfvv71ib3IgTWV677+9IGFrYSB1bmJvcm5jaGlra2VuIChnYWJvci5tZXpvQG91dGxvb2suY29tKVxyXG5BbGwgcmlnaHRzIHJlc2VydmVkLlxyXG5cclxuUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IG1vZGlmaWNhdGlvbixcclxuYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBhcmUgbWV0OlxyXG5cclxuICogUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzXHJcbiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXHJcblxyXG4gKiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXNcclxuICBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3JcclxuICBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxyXG5cclxuKiBOZWl0aGVyIHRoZSBuYW1lIG9mIHRoZSBBcnJheUZpcmUgbm9yIHRoZSBuYW1lcyBvZiBpdHNcclxuICBjb250cmlidXRvcnMgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbVxyXG4gIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXHJcblxyXG5USElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIiBBTkRcclxuQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRURcclxuV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRVxyXG5ESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUlxyXG5BTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVNcclxuKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTO1xyXG5MT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT05cclxuQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlRcclxuKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVNcclxuU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXHJcbiovXHJcblxyXG5cInVzZSBzdHJpY3RcIjtcclxuXHJcbmxldCBsb2Rhc2ggPSByZXF1aXJlKFwibG9kYXNoXCIpO1xyXG5sZXQgYXNzZXJ0ID0gcmVxdWlyZShcImJldHRlci1hc3NlcnRcIik7XHJcblxyXG5mdW5jdGlvbiBEaW00KGRpbTAsIGRpbTEsIGRpbTIsIGRpbTMpIHtcclxuICAgIGlmIChfLmlzQXJyYXkoZGltMCkpIHtcclxuICAgICAgICByZXR1cm4gbmV3IERpbTQoZGltMFswXSwgZGltMFsxXSwgZGltMFsyXSwgZGltMFszXSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmRpbXMgPSBbXTtcclxuICAgIGlmIChfLmlzTnVtYmVyKGRpbTApKSB7IHRoaXMuZGltcy5wdXNoKGRpbTApIH0gZWxzZSB7IHRoaXMuZGltcy5wdXNoKDEpOyB9XHJcbiAgICBpZiAoXy5pc051bWJlcihkaW0xKSkgeyB0aGlzLmRpbXMucHVzaChkaW0xKSB9IGVsc2UgeyB0aGlzLmRpbXMucHVzaCgxKTsgfVxyXG4gICAgaWYgKF8uaXNOdW1iZXIoZGltMikpIHsgdGhpcy5kaW1zLnB1c2goZGltMikgfSBlbHNlIHsgdGhpcy5kaW1zLnB1c2goMSk7IH1cclxuICAgIGlmIChfLmlzTnVtYmVyKGRpbTMpKSB7IHRoaXMuZGltcy5wdXNoKGRpbTMpIH0gZWxzZSB7IHRoaXMuZGltcy5wdXNoKDEpOyB9XHJcbiAgICBsZXQgaW5kZXg7XHJcbiAgICBmb3IgKGluZGV4ID0gMzsgaW5kZXggPj0gMDsgaW5kZXgtLSkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpbXNbaW5kZXhdICE9PSAxKSB7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMubmRpbXMgPSB0aGlzLm5EaW1zID0gaW5kZXggKyAxO1xyXG4gICAgdGhpcy5lbGVtZW50cyA9IHRoaXMuZGltc1swXSAqIHRoaXMuZGltc1sxXSAqIHRoaXMuZGltc1syXSAqIHRoaXMuZGltc1szXTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBEaW00OyJdfQ==
