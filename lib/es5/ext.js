"use strict";
"use strict";
var Bluebird = require("bluebird");
function Ext(self) {
  self.types = {
    dtype: require("./dtype"),
    source: require("./source")
  };
  self.getDevices = function() {
    var current = self.getDevice();
    try {
      var count = self.getDeviceCount();
      var result = [];
      for (var i = 0; i < count; i++) {
        self.setDevice(i);
        var info = self.deviceInfo();
        info.id = i;
        result.push(info);
      }
      return result;
    } finally {
      self.setDevice(current);
    }
  };
  self.async = Bluebird.coroutine;
}
module.exports = Ext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQkE7QUFBQSxXQUFXLENBQUM7QUFFWixBQUFJLEVBQUEsQ0FBQSxRQUFPLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUMsQ0FBQztBQUVsQyxPQUFTLElBQUUsQ0FBRSxJQUFHLENBQUc7QUFDZixLQUFHLE1BQU0sRUFBSTtBQUNULFFBQUksQ0FBRyxDQUFBLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQztBQUN4QixTQUFLLENBQUcsQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUM7QUFBQSxFQUM5QixDQUFDO0FBRUQsS0FBRyxXQUFXLEVBQUksVUFBUyxBQUFELENBQUc7QUFDekIsQUFBSSxNQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsSUFBRyxVQUFVLEFBQUMsRUFBQyxDQUFDO0FBQzlCLE1BQUk7QUFDQSxBQUFJLFFBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxJQUFHLGVBQWUsQUFBQyxFQUFDLENBQUM7QUFDakMsQUFBSSxRQUFBLENBQUEsTUFBSyxFQUFJLEdBQUMsQ0FBQztBQUNmLGlCQUFhLEVBQUEsQ0FBRyxDQUFBLENBQUEsRUFBSSxNQUFJLENBQUcsQ0FBQSxDQUFBLEVBQUUsQ0FBRztBQUM1QixXQUFHLFVBQVUsQUFBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ2pCLEFBQUksVUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLElBQUcsV0FBVyxBQUFDLEVBQUMsQ0FBQztBQUM1QixXQUFHLEdBQUcsRUFBSSxFQUFBLENBQUM7QUFDWCxhQUFLLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO01BQ3JCO0FBQUEsQUFDQSxXQUFPLE9BQUssQ0FBQztJQUNqQixDQUNBLE9BQVE7QUFDSixTQUFHLFVBQVUsQUFBQyxDQUFDLE9BQU0sQ0FBQyxDQUFDO0lBQzNCO0FBQUEsRUFDSixDQUFDO0FBRUQsS0FBRyxNQUFNLEVBQUksQ0FBQSxRQUFPLFVBQVUsQ0FBQztBQUNuQztBQUFBLEFBRUEsS0FBSyxRQUFRLEVBQUksSUFBRSxDQUFDO0FBQUEiLCJmaWxlIjoiZXh0LmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTUgR++/vWJvciBNZXrvv70gYWthIHVuYm9ybmNoaWtrZW5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5cInVzZSBzdHJpY3RcIjtcblxubGV0IEJsdWViaXJkID0gcmVxdWlyZShcImJsdWViaXJkXCIpO1xuXG5mdW5jdGlvbiBFeHQoc2VsZikge1xuICAgIHNlbGYudHlwZXMgPSB7XG4gICAgICAgIGR0eXBlOiByZXF1aXJlKFwiLi9kdHlwZVwiKSxcbiAgICAgICAgc291cmNlOiByZXF1aXJlKFwiLi9zb3VyY2VcIilcbiAgICB9O1xuXG4gICAgc2VsZi5nZXREZXZpY2VzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBjdXJyZW50ID0gc2VsZi5nZXREZXZpY2UoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGxldCBjb3VudCA9IHNlbGYuZ2V0RGV2aWNlQ291bnQoKTtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuICAgICAgICAgICAgICAgIHNlbGYuc2V0RGV2aWNlKGkpO1xuICAgICAgICAgICAgICAgIGxldCBpbmZvID0gc2VsZi5kZXZpY2VJbmZvKCk7XG4gICAgICAgICAgICAgICAgaW5mby5pZCA9IGk7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goaW5mbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgc2VsZi5zZXREZXZpY2UoY3VycmVudCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgc2VsZi5hc3luYyA9IEJsdWViaXJkLmNvcm91dGluZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFeHQ7Il19
