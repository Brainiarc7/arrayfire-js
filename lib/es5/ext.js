"use strict";
"use strict";
var Bluebird = require("bluebird");
function Ext(self) {
  self.types = {
    dtype: require("./dtype"),
    source: require("./source")
  };
  self.getDevices = function() {
    var current = self.getDevice();
    try {
      var count = self.getDeviceCount();
      var result = [];
      for (var i = 0; i < count; i++) {
        self.setDevice(i);
        result.push(self.deviceInfo());
      }
      return result;
    } finally {
      self.setDevice(current);
    }
  };
  self.async = Bluebird.coroutine;
}
module.exports = Ext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnQkE7QUFBQSxXQUFXLENBQUM7QUFFWixBQUFJLEVBQUEsQ0FBQSxRQUFPLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUMsQ0FBQztBQUVsQyxPQUFTLElBQUUsQ0FBRSxJQUFHLENBQUc7QUFDZixLQUFHLE1BQU0sRUFBSTtBQUNULFFBQUksQ0FBRyxDQUFBLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQztBQUN4QixTQUFLLENBQUcsQ0FBQSxPQUFNLEFBQUMsQ0FBQyxVQUFTLENBQUM7QUFBQSxFQUM5QixDQUFDO0FBRUQsS0FBRyxXQUFXLEVBQUksVUFBUyxBQUFELENBQUc7QUFDekIsQUFBSSxNQUFBLENBQUEsT0FBTSxFQUFJLENBQUEsSUFBRyxVQUFVLEFBQUMsRUFBQyxDQUFDO0FBQzlCLE1BQUk7QUFDQSxBQUFJLFFBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxJQUFHLGVBQWUsQUFBQyxFQUFDLENBQUM7QUFDakMsQUFBSSxRQUFBLENBQUEsTUFBSyxFQUFJLEdBQUMsQ0FBQztBQUNmLGlCQUFhLEVBQUEsQ0FBRyxDQUFBLENBQUEsRUFBSSxNQUFJLENBQUcsQ0FBQSxDQUFBLEVBQUUsQ0FBRztBQUM1QixXQUFHLFVBQVUsQUFBQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ2pCLGFBQUssS0FBSyxBQUFDLENBQUMsSUFBRyxXQUFXLEFBQUMsRUFBQyxDQUFDLENBQUM7TUFDbEM7QUFBQSxBQUNBLFdBQU8sT0FBSyxDQUFDO0lBQ2pCLENBQ0EsT0FBUTtBQUNKLFNBQUcsVUFBVSxBQUFDLENBQUMsT0FBTSxDQUFDLENBQUM7SUFDM0I7QUFBQSxFQUNKLENBQUM7QUFFRCxLQUFHLE1BQU0sRUFBSSxDQUFBLFFBQU8sVUFBVSxDQUFDO0FBQ25DO0FBQUEsQUFFQSxLQUFLLFFBQVEsRUFBSSxJQUFFLENBQUM7QUFBQSIsImZpbGUiOiJleHQuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxNSBH77+9Ym9yIE1leu+/vSBha2EgdW5ib3JuY2hpa2tlblxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cblwidXNlIHN0cmljdFwiO1xuXG5sZXQgQmx1ZWJpcmQgPSByZXF1aXJlKFwiYmx1ZWJpcmRcIik7XG5cbmZ1bmN0aW9uIEV4dChzZWxmKSB7XG4gICAgc2VsZi50eXBlcyA9IHtcbiAgICAgICAgZHR5cGU6IHJlcXVpcmUoXCIuL2R0eXBlXCIpLFxuICAgICAgICBzb3VyY2U6IHJlcXVpcmUoXCIuL3NvdXJjZVwiKVxuICAgIH07XG5cbiAgICBzZWxmLmdldERldmljZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IGN1cnJlbnQgPSBzZWxmLmdldERldmljZSgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbGV0IGNvdW50ID0gc2VsZi5nZXREZXZpY2VDb3VudCgpO1xuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc2VsZi5zZXREZXZpY2UoaSk7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goc2VsZi5kZXZpY2VJbmZvKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHNlbGYuc2V0RGV2aWNlKGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHNlbGYuYXN5bmMgPSBCbHVlYmlyZC5jb3JvdXRpbmU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRXh0OyJdfQ==
