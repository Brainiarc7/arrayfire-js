"use strict";
var normType = module.exports = {
  vector1: 1,
  vectorInf: 2,
  vector2: 3,
  vectorP: 4,
  matrix1: 5,
  matrixInf: 6,
  matrix2: 7,
  matrixLPq: 8,
  euclid: 3,
  AF_NORM_VECTOR_1: 1,
  AF_NORM_VECTOR_INF: 2,
  AF_NORM_VECTOR_2: 3,
  AF_NORM_VECTOR_P: 4,
  AF_NORM_MATRIX_1: 5,
  AF_NORM_MATRIX_INF: 6,
  AF_NORM_MATRIX_2: 7,
  AF_NORM_MATRIX_L_PQ: 8,
  AF_NORM_EUCLID: 3
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vcm1UeXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStCQTtBQUVBLEFBQUksRUFBQSxDQUFBLFFBQU8sRUFBSSxDQUFBLE1BQUssUUFBUSxFQUFJO0FBQzVCLFFBQU0sQ0FBRyxFQUFBO0FBQ1QsVUFBUSxDQUFHLEVBQUE7QUFDWCxRQUFNLENBQUcsRUFBQTtBQUNULFFBQU0sQ0FBRyxFQUFBO0FBQ1QsUUFBTSxDQUFHLEVBQUE7QUFDVCxVQUFRLENBQUcsRUFBQTtBQUNYLFFBQU0sQ0FBRyxFQUFBO0FBQ1QsVUFBUSxDQUFHLEVBQUE7QUFDWCxPQUFLLENBQUcsRUFBQTtBQUNSLGlCQUFlLENBQUcsRUFBQTtBQUNsQixtQkFBaUIsQ0FBRyxFQUFBO0FBQ3BCLGlCQUFlLENBQUcsRUFBQTtBQUNsQixpQkFBZSxDQUFHLEVBQUE7QUFDbEIsaUJBQWUsQ0FBRyxFQUFBO0FBQ2xCLG1CQUFpQixDQUFHLEVBQUE7QUFDcEIsaUJBQWUsQ0FBRyxFQUFBO0FBQ2xCLG9CQUFrQixDQUFHLEVBQUE7QUFDckIsZUFBYSxDQUFHLEVBQUE7QUFBQSxBQUNwQixDQUFDO0FBQUEiLCJmaWxlIjoibm9ybVR5cGUuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgKGMpIDIwMTQtMjAxNSwgQXJyYXlGaXJlXG5Db3B5cmlnaHQgKGMpIDIwMTUgR8OhYm9yIE1lesWRIGFrYSB1bmJvcm5jaGlra2VuIChnYWJvci5tZXpvQG91dGxvb2suY29tKVxuQWxsIHJpZ2h0cyByZXNlcnZlZC5cblxuUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0IG1vZGlmaWNhdGlvbixcbmFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcblxuICogUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLCB0aGlzXG4gIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuXG4gKiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXNcbiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yXG4gIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG5cbiAqIE5laXRoZXIgdGhlIG5hbWUgb2YgdGhlIEFycmF5RmlyZSBub3IgdGhlIG5hbWVzIG9mIGl0c1xuICBjb250cmlidXRvcnMgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbVxuICB0aGlzIHNvZnR3YXJlIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLlxuXG5USElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIiBBTkRcbkFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEXG5XQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFXG5ESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUlxuQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTXG4oSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1IgU0VSVklDRVM7XG5MT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT05cbkFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUXG4oSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJU1xuU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4qL1xuXG5cInVzZSBzdHJpY3RcIjtcblxubGV0IG5vcm1UeXBlID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdmVjdG9yMTogMSwgICAgICAvLy88IHRyZWF0cyB0aGUgaW5wdXQgYXMgYSB2ZWN0b3IgYW5kIHJldHVybnMgdGhlIHN1bSBvZiBhYnNvbHV0ZSB2YWx1ZXNcbiAgICB2ZWN0b3JJbmY6IDIsICAgIC8vLzwgdHJlYXRzIHRoZSBpbnB1dCBhcyBhIHZlY3RvciBhbmQgcmV0dXJucyB0aGUgbWF4IG9mIGFic29sdXRlIHZhbHVlc1xuICAgIHZlY3RvcjI6IDMsICAgICAgLy8vPCB0cmVhdHMgdGhlIGlucHV0IGFzIGEgdmVjdG9yIGFuZCByZXR1cm5zIGV1Y2xpZGVhbiBub3JtXG4gICAgdmVjdG9yUDogNCwgICAgICAvLy88IHRyZWF0cyB0aGUgaW5wdXQgYXMgYSB2ZWN0b3IgYW5kIHJldHVybnMgdGhlIHAtbm9ybVxuICAgIG1hdHJpeDE6IDUsICAgICAgLy8vPCByZXR1cm4gdGhlIG1heCBvZiBjb2x1bW4gc3Vtc1xuICAgIG1hdHJpeEluZjogNiwgICAgLy8vPCByZXR1cm4gdGhlIG1heCBvZiByb3cgc3Vtc1xuICAgIG1hdHJpeDI6IDcsICAgICAgLy8vPCByZXR1cm5zIHRoZSBtYXggc2luZ3VsYXIgdmFsdWUpLiBDdXJyZW50bHkgTk9UIFNVUFBPUlRFRFxuICAgIG1hdHJpeExQcTogOCwgICAvLy88IHJldHVybnMgTHBxLW5vcm1cbiAgICBldWNsaWQ6IDMsIC8vLzwgVGhlIGRlZmF1bHQuIFNhbWUgYXMgdmVjdG9yMlxuICAgIEFGX05PUk1fVkVDVE9SXzE6IDEsICAgICAgLy8vPCB0cmVhdHMgdGhlIGlucHV0IGFzIGEgdmVjdG9yIGFuZCByZXR1cm5zIHRoZSBzdW0gb2YgYWJzb2x1dGUgdmFsdWVzXG4gICAgQUZfTk9STV9WRUNUT1JfSU5GOiAyLCAgICAvLy88IHRyZWF0cyB0aGUgaW5wdXQgYXMgYSB2ZWN0b3IgYW5kIHJldHVybnMgdGhlIG1heCBvZiBhYnNvbHV0ZSB2YWx1ZXNcbiAgICBBRl9OT1JNX1ZFQ1RPUl8yOiAzLCAgICAgIC8vLzwgdHJlYXRzIHRoZSBpbnB1dCBhcyBhIHZlY3RvciBhbmQgcmV0dXJucyBldWNsaWRlYW4gbm9ybVxuICAgIEFGX05PUk1fVkVDVE9SX1A6IDQsICAgICAgLy8vPCB0cmVhdHMgdGhlIGlucHV0IGFzIGEgdmVjdG9yIGFuZCByZXR1cm5zIHRoZSBwLW5vcm1cbiAgICBBRl9OT1JNX01BVFJJWF8xOiA1LCAgICAgIC8vLzwgcmV0dXJuIHRoZSBtYXggb2YgY29sdW1uIHN1bXNcbiAgICBBRl9OT1JNX01BVFJJWF9JTkY6IDYsICAgIC8vLzwgcmV0dXJuIHRoZSBtYXggb2Ygcm93IHN1bXNcbiAgICBBRl9OT1JNX01BVFJJWF8yOiA3LCAgICAgIC8vLzwgcmV0dXJucyB0aGUgbWF4IHNpbmd1bGFyIHZhbHVlKS4gQ3VycmVudGx5IE5PVCBTVVBQT1JURURcbiAgICBBRl9OT1JNX01BVFJJWF9MX1BROiA4LCAgIC8vLzwgcmV0dXJucyBMcHEtbm9ybVxuICAgIEFGX05PUk1fRVVDTElEOiAzIC8vLzwgVGhlIGRlZmF1bHQuIFNhbWUgYXMgQUZfTk9STV9WRUNUT1JfMlxufTsiXX0=
