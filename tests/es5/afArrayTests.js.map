{"version":3,"sources":["afArrayTests.js"],"names":[],"mappings":"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","file":"afArrayTests.js","sourcesContent":["/*\r\nCopyright (c) 2014-2015, ArrayFire\r\nCopyright (c) 2015 Gábor Mező aka unbornchikken (gabor.mezo@outlook.com)\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification,\r\nare permitted provided that the following conditions are met:\r\n\r\n * Redistributions of source code must retain the above copyright notice, this\r\n  list of conditions and the following disclaimer.\r\n\r\n * Redistributions in binary form must reproduce the above copyright notice, this\r\n  list of conditions and the following disclaimer in the documentation and/or\r\n  other materials provided with the distribution.\r\n\r\n * Neither the name of the ArrayFire nor the names of its\r\n  contributors may be used to endorse or promote products derived from\r\n  this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\n\"use strict\";\r\n/* global describe,it */\r\nlet assert = require(\"better-assert\");\r\nlet _ = require(\"lodash\");\r\nlet ref = require(\"ref\");\r\nlet Bluebird = require(\"bluebird\");\r\nlet async = Bluebird.coroutine;\r\nlet testExec = require(\"./testExec\");\r\nlet float = ref.types.float;\r\n\r\ndescribe(\"AFArray class and methods\", function() {\r\n    testExec.run(function(af) {\r\n        let AFArray = af.AFArray;\r\n\r\n        it(\"should export AFArray constructor\", function() {\r\n            assert(_.isFunction(AFArray));\r\n        });\r\n\r\n        it(\"should create empty\", function() {\r\n            let array = new AFArray();\r\n            assert(_.isObject(array));\r\n            assert(array.bytes() === 0);\r\n            assert(array.elements() === 0);\r\n            assert(array.isempty());\r\n            assert(_.isFunction(array.host));\r\n            assert(_.isFunction(array.hostAsync));\r\n            assert(_.isUndefined(array.hostAsyncAsync));\r\n            assert(_.isFunction(array.hostSync));\r\n            assert(_.isUndefined(array.hostSyncAsync));\r\n            assert(_.isUndefined(array.hostSyncSync));\r\n            assert(_.isUndefined(array.hostAsyncSync));\r\n        });\r\n\r\n        it(\"should fail with one number argument\", function() {\r\n            try {\r\n                let array = new AFArray(1);\r\n                assert(false);\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n\r\n        it(\"should create new one dimensional\", function() {\r\n            let array = new AFArray(10, af.dType.s32);\r\n            assert(_.isObject(array));\r\n            assert(array.bytes() === 10 * 4);\r\n            assert(array.elements() === 10);\r\n            assert(array.type() === af.dType.s32);\r\n            assert(array.numdims() === 1);\r\n            assert(array.dims(0) === 10);\r\n            assert(array.dims(1) === 1);\r\n            assert(array.dims(2) === 1);\r\n            assert(array.dims(3) === 1);\r\n            let dims = array.dims();\r\n            assert(_.isObject(dims));\r\n            assert(dims.elements === 10);\r\n            assert(dims.ndims === 1);\r\n            assert(dims.values[0] === 10);\r\n            assert(dims.values[1] === 1);\r\n            assert(dims.values[2] === 1);\r\n            assert(dims.values[3] === 1);\r\n            assert(array.isempty() === false);\r\n            assert(array.isscalar() === false);\r\n            assert(array.isvector() === true);\r\n            assert(array.isrow() === false);\r\n            assert(array.iscolumn() === true);\r\n            assert(array.iscomplex() === false);\r\n            assert(array.isreal() === true);\r\n            assert(array.isdouble() === false);\r\n            assert(array.issingle() === false);\r\n            assert(array.isrealfloating() === false);\r\n            assert(array.isfloating() === false);\r\n            assert(array.isinteger() === true);\r\n            assert(array.isbool() === false);\r\n        });\r\n\r\n        it(\"should create new two dimensional\", function() {\r\n            let array = new AFArray(10, 20, af.dType.f32);\r\n            assert(_.isObject(array));\r\n            assert(array.bytes() === 10 * 20 * 4);\r\n            assert(array.elements() === 10 * 20);\r\n            assert(array.type() === af.dType.f32);\r\n            assert(array.numdims() === 2);\r\n            assert(array.dims(0) === 10);\r\n            assert(array.dims(1) === 20);\r\n            assert(array.dims(2) === 1);\r\n            assert(array.dims(3) === 1);\r\n            let dims = array.dims();\r\n            assert(_.isObject(dims));\r\n            assert(dims.elements === 10 * 20);\r\n            assert(dims.ndims === 2);\r\n            assert(dims.values[0] === 10);\r\n            assert(dims.values[1] === 20);\r\n            assert(dims.values[2] === 1);\r\n            assert(dims.values[3] === 1);\r\n            assert(array.isempty() === false);\r\n            assert(array.isscalar() === false);\r\n            assert(array.isvector() === false);\r\n            assert(array.isrow() === false);\r\n            assert(array.iscolumn() === false);\r\n            assert(array.iscomplex() === false);\r\n            assert(array.isreal() === true);\r\n            assert(array.isdouble() === false);\r\n            assert(array.issingle() === true);\r\n            assert(array.isrealfloating() === true);\r\n            assert(array.isfloating() === true);\r\n            assert(array.isinteger() === false);\r\n            assert(array.isbool() === false);\r\n        });\r\n\r\n        it(\"should create new three dimensional\", function() {\r\n            let array = new AFArray(10, 20, 30, af.dType.f32);\r\n            assert(_.isObject(array));\r\n            assert(array.bytes() === 10 * 20 * 30 * 4);\r\n            assert(array.elements() === 10 * 20 * 30);\r\n            assert(array.type() === af.dType.f32);\r\n            assert(array.numdims() === 3);\r\n            assert(array.dims(0) === 10);\r\n            assert(array.dims(1) === 20);\r\n            assert(array.dims(2) === 30);\r\n            assert(array.dims(3) === 1);\r\n            let dims = array.dims();\r\n            assert(_.isObject(dims));\r\n            assert(dims.elements === 10 * 20 * 30);\r\n            assert(dims.ndims === 3);\r\n            assert(dims.values[0] === 10);\r\n            assert(dims.values[1] === 20);\r\n            assert(dims.values[2] === 30);\r\n            assert(dims.values[3] === 1);\r\n            assert(array.isempty() === false);\r\n            assert(array.isscalar() === false);\r\n            assert(array.isvector() === false);\r\n            assert(array.isrow() === false);\r\n            assert(array.iscolumn() === false);\r\n            assert(array.iscomplex() === false);\r\n            assert(array.isreal() === true);\r\n            assert(array.isdouble() === false);\r\n            assert(array.issingle() === true);\r\n            assert(array.isrealfloating() === true);\r\n            assert(array.isfloating() === true);\r\n            assert(array.isinteger() === false);\r\n            assert(array.isbool() === false);\r\n        });\r\n\r\n        function verify4(array) {\r\n            assert(_.isObject(array));\r\n            assert(array.bytes() === 10 * 20 * 30 * 40 * 4);\r\n            assert(array.elements() === 10 * 20 * 30 * 40);\r\n            assert(array.type() === af.dType.f32);\r\n            assert(array.numdims() === 4);\r\n            assert(array.dims(0) === 10);\r\n            assert(array.dims(1) === 20);\r\n            assert(array.dims(2) === 30);\r\n            assert(array.dims(3) === 40);\r\n            let dims = array.dims();\r\n            assert(_.isObject(dims));\r\n            assert(dims.elements === 10 * 20 * 30 * 40);\r\n            assert(dims.ndims === 4);\r\n            assert(dims.values[0] === 10);\r\n            assert(dims.values[1] === 20);\r\n            assert(dims.values[2] === 30);\r\n            assert(dims.values[3] === 40);\r\n            assert(array.isempty() === false);\r\n            assert(array.isscalar() === false);\r\n            assert(array.isvector() === false);\r\n            assert(array.isrow() === false);\r\n            assert(array.iscolumn() === false);\r\n            assert(array.iscomplex() === false);\r\n            assert(array.isreal() === true);\r\n            assert(array.isdouble() === false);\r\n            assert(array.issingle() === true);\r\n            assert(array.isrealfloating() === true);\r\n            assert(array.isfloating() === true);\r\n            assert(array.isinteger() === false);\r\n            assert(array.isbool() === false);\r\n        }\r\n\r\n        it(\"should create new four dimensional\", function() {\r\n            let array = new AFArray(10, 20, 30, 40, af.dType.f32);\r\n            verify4(array);\r\n        });\r\n\r\n        it(\"should create new four dimensional from dim4\", function() {\r\n            let array = new AFArray({ values: [10, 20, 30, 40] }, af.dType.f32);\r\n            verify4(array);\r\n        });\r\n\r\n        it(\"should create new four dimensional from dim4 array\", function() {\r\n            let array = new AFArray([10, 20, 30, 40], af.dType.f32);\r\n            verify4(array);\r\n        });\r\n\r\n        it(\"should initialize from buffer, copyable, and readable - asynchronously w/ generators\", function(done) {\r\n            let f = async(function*() {\r\n                let int = ref.types.int;\r\n                const count = 10;\r\n                let buff = new Buffer(int.size * count);\r\n                for (let v = 0; v < count; v++) {\r\n                    int.set(buff, v * int.size, v * v);\r\n                }\r\n\r\n                assert(_.isFunction(AFArray.create));\r\n                assert(_.isFunction(AFArray.createAsync));\r\n\r\n                let array = yield AFArray.createAsync(count, af.dType.s32, buff);\r\n                assert(array.bytes() === count * int.size);\r\n                assert(array.type() === af.dType.s32);\r\n\r\n                let buff2 = new Buffer(int.size * count);\r\n                yield array.hostAsync(buff2);\r\n                for (let v = 0; v < count; v++) {\r\n                    let v1 = int.get(buff, v * int.size);\r\n                    let v2 = int.get(buff2, v * int.size);\r\n                    assert(v1 === v2);\r\n                    assert(v1 === v * v);\r\n                }\r\n\r\n                let array2 = array.copy();\r\n                assert(array2 instanceof AFArray);\r\n                assert(array2.bytes() === array.bytes());\r\n                let buff3 = yield array2.hostAsync();\r\n                assert(buff3 instanceof Buffer);\r\n                assert(buff3.length === int.size * count);\r\n                for (let v = 0; v < count; v++) {\r\n                    let v1 = int.get(buff, v * int.size);\r\n                    let v2 = int.get(buff3, v * int.size);\r\n                    assert(v1 === v2);\r\n                    assert(v1 === v * v);\r\n                }\r\n\r\n                // Let's do some indexing:\r\n                let v = yield array2.valueAsync();\r\n                assert(v === 0.0);\r\n\r\n                v = yield array2.at(1).valueAsync();\r\n                assert(v === 1.0);\r\n\r\n                v = yield array2.at(2).scalarAsync();\r\n                assert(v === 4.0);\r\n\r\n                v = yield array2.at(\"end\").scalarAsync();\r\n                assert(v === 9.0 * 9.0);\r\n\r\n                v = yield array2.at(af.end - 1).scalarAsync();\r\n                assert(v === 8.0 * 8.0);\r\n            });\r\n            f().nodeify(done);\r\n        });\r\n\r\n        it(\"should initialize from buffer, copyable, and readable - synchronously (blocking)\", function() {\r\n            let int = ref.types.int;\r\n            const count = 10;\r\n            let buff = new Buffer(int.size * count);\r\n            for (let v = 0; v < count; v++) {\r\n                int.set(buff, v * int.size, v * v);\r\n            }\r\n\r\n            assert(_.isFunction(AFArray.create));\r\n            assert(_.isFunction(AFArray.createSync));\r\n\r\n            let array = AFArray.createSync(count, af.dType.s32, buff);\r\n            assert(array.bytes() === count * int.size);\r\n            assert(array.type() === af.dType.s32);\r\n\r\n            let buff2 = new Buffer(int.size * count);\r\n            array.hostSync(buff2);\r\n            for (let v = 0; v < count; v++) {\r\n                let v1 = int.get(buff, v * int.size);\r\n                let v2 = int.get(buff2, v * int.size);\r\n                assert(v1 === v2);\r\n                assert(v1 === v * v);\r\n            }\r\n\r\n            let array2 = array.copy();\r\n            assert(array2 instanceof AFArray);\r\n            assert(array2.bytes() === array.bytes());\r\n            let buff3 = array2.hostSync();\r\n            assert(buff3 instanceof Buffer);\r\n            assert(buff3.length === int.size * count);\r\n            for (let v = 0; v < count; v++) {\r\n                let v1 = int.get(buff, v * int.size);\r\n                let v2 = int.get(buff3, v * int.size);\r\n                assert(v1 === v2);\r\n                assert(v1 === v * v);\r\n            }\r\n\r\n            // Let's do some indexing:\r\n            let v = array2.valueSync();\r\n            assert(v === 0.0);\r\n\r\n            v = array.at(1).valueSync();\r\n            assert(v === 1.0);\r\n\r\n            v = array2.at(2).scalarSync();\r\n            assert(v === 4.0);\r\n\r\n            v = array2.at(\"end\").scalarSync();\r\n            assert(v === 9.0 * 9.0);\r\n\r\n            v = array2.at(af.end - 1).scalarSync();\r\n            assert(v === 8.0 * 8.0);\r\n        });\r\n        \r\n        it(\"should be created of a part of another with new dimensions\", function (done) {\r\n            async(function* () {\r\n                let arr = new af.AFArray(10, af.dType.f32);\r\n                arr.set(new af.Col(0), 0);\r\n                arr.set(3, 1);\r\n                arr.set(4, 2);\r\n\r\n                let sub = arr.at(new af.Seq(3, 6));\r\n                let sub2 = new af.AFArray(sub, new af.Dim4(2, 2));\r\n\r\n                let buff = yield sub2.hostAsync();\r\n\r\n                assert(float.get(buff, 0 * float.size) === 1);\r\n                assert(float.get(buff, 1 * float.size) === 2);\r\n\r\n                arr.set(3, 2);\r\n                arr.set(4, 3);\r\n\r\n                buff = yield sub2.hostAsync();\r\n\r\n                assert(float.get(buff, 0 * float.size) === 1);\r\n                assert(float.get(buff, 1 * float.size) === 2);\r\n            })().nodeify(done);\r\n        });\r\n\r\n        describe(\"RAII\", function() {\r\n            describe(\"scope\", function() {\r\n                it(\"should exported as a function\", function () {\r\n                    assert(_.isFunction(af.scope));\r\n                });\r\n\r\n                it(\"should support RAII interface\", function () {\r\n                    assert(_.isFunction(af.scope.begin));\r\n                    assert(_.isFunction(af.scope.end));\r\n                    assert(_.isFunction(af.scope.result));\r\n                    assert(_.isFunction(af.scope.register));\r\n                });\r\n\r\n                it(\"should destroy temporaries (sync)\", function() {\r\n                    let arr, sub;\r\n                    let x = af.scope(function() {\r\n                        assert(this === af.scope);\r\n                        arr = new af.AFArray(10, af.dType.f32);\r\n                        arr.set(new af.Col(0), 0);\r\n                        arr.set(3, 1);\r\n                        arr.set(4, 2);\r\n\r\n                        sub = arr.at(new af.Seq(3, 6));\r\n\r\n                        this.result(arr);\r\n\r\n                        return 1;\r\n                    });\r\n\r\n                    assert(x === 1);\r\n\r\n                    arr.set(3, 2);\r\n\r\n                    try {\r\n                        sub.set(0, 2);\r\n                        assert(false);\r\n                    }\r\n                    catch (e) {\r\n                        if (!/free\\(\\)/.test(e.message)) {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                it(\"should destroy registered arrays\", function() {\r\n                    let arr = new af.AFArray(10, af.dType.f32);\r\n                    arr.set(new af.Col(0), 0);\r\n                    arr.set(3, 1);\r\n                    arr.set(4, 2);\r\n\r\n                    let sub = arr.at(new af.Seq(3, 6));\r\n\r\n                    af.scope(function() {\r\n                        assert(this === af.scope);\r\n\r\n                        sub.set(0, 0);\r\n\r\n                        // Part of the scope, hence will be destroyed.\r\n                        this.register(sub);\r\n                    });\r\n\r\n                    arr.set(3, 2);\r\n\r\n                    try {\r\n                        sub.set(0, 2);\r\n                        assert(false);\r\n                    }\r\n                    catch (e) {\r\n                        if (!/free\\(\\)/.test(e.message)) {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    });\r\n});"],"sourceRoot":"/source/"}